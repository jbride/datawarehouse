# Kafka related properties

quarkus.kafka.health.enabled=true
kafka.bootstrap.servers=kafka-cluster-kafka-bootstrap:9092

mp.messaging.incoming.topic-mission-command.connector=smallrye-kafka
mp.messaging.incoming.topic-mission-command.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
er.demo.LOG_MISSION_COMMAND_COMSUMER=false

mp.messaging.incoming.topic-mission-event.connector=smallrye-kafka
mp.messaging.incoming.topic-mission-event.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
er.demo.LOG_MISSION_EVENT_COMSUMER=false

mp.messaging.incoming.topic-incident-event.connector=smallrye-kafka
mp.messaging.incoming.topic-incident-event.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
er.demo.LOG_INCIDENT_EVENT_COMSUMER=false

mp.messaging.incoming.topic-responder-location-update.connector=smallrye-kafka
mp.messaging.incoming.topic-responder-location-update.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
er.demo.LOG_RESPONDER_LOCATION_UPDATE_COMSUMER=false

# Persistence related properties
quarkus.datasource.url=vertx-reactive:postgresql://dw-postgresql:5432/datawarehouse
quarkus.datasource.username = naps
quarkus.datasource.password = naps

# MicroProfile REST client properties
com.redhat.cajun.navy.datawarehouse.client.RespondersClient/mp-rest/url=http://responder-service:8080
com.redhat.cajun.navy.datawarehouse.client.RespondersClient/mp-rest/scope=javax.enterprise.context.ApplicationScoped

# Quarkus testing
quarkus.http.test-port=8083

quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.color=false

# Infinispan
quarkus.infinispan-client.server-list=datagrid-service:11222
quarkus.infinispan-client.auth-username=demo
quarkus.infinispan-client.auth-password=demo
er.demo.DELETE_REMOTE_CACHE_ON_STARTUP=true
